<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张玉树的博客</title>
  
  <subtitle>早睡早起</subtitle>
  <link href="http://xiaoyaoguawang,github.io/atom.xml" rel="self"/>
  
  <link href="http://xiaoyaoguawang,github.io/"/>
  <updated>2023-07-01T09:33:50.929Z</updated>
  <id>http://xiaoyaoguawang,github.io/</id>
  
  <author>
    <name>zhangyushu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python crawler</title>
    <link href="http://xiaoyaoguawang,github.io/2023/07/01/python-crawler/"/>
    <id>http://xiaoyaoguawang,github.io/2023/07/01/python-crawler/</id>
    <published>2023-07-01T05:42:57.000Z</published>
    <updated>2023-07-01T09:33:50.929Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-cralwer"><a href="#python-cralwer" class="headerlink" title="python cralwer"></a>python cralwer</h1><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参考链接：https://cuiqingcai.com/17777.html</span><br></pre></td></tr></table></figure><h2 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h2><h3 id="1-urllib"><a href="#1-urllib" class="headerlink" title="1. urllib"></a>1. urllib</h3><p>包括四个模块：</p><ul><li>request:</li><li>error</li><li>parse</li><li>robotparser</li></ul><h4 id="request"><a href="#request" class="headerlink" title="request"></a>request</h4><ul><li><p>&#x3D;&#x3D;urlopen()&#x3D;&#x3D;</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发送请求</span><br></pre></td></tr></table></figure><ul><li>参数列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urllib.request.urlopen(url,data=<span class="literal">None</span>,[timeout,]*,cafile=<span class="literal">None</span>,capath=<span class="literal">None</span>,cadefault=<span class="literal">False</span>,context=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li>url</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">未指定data时，默认get请求方法</span><br><span class="line">url是字符串或者request对象</span><br></pre></td></tr></table></figure><ul><li>data</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">指定data时，是post请求方法</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">data = <span class="built_in">bytes</span>(urllib.parse.urlencode(&#123;<span class="string">&#x27;word&#x27;</span>:<span class="string">&#x27;hello&#x27;</span>&#125;),encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="comment">#数据是字典类型，用parse模块的urlencode()方法编码</span></span><br><span class="line">response = urllib.request.urlopen(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>,data=data)<span class="comment">#data默认字节流，需要用到bytes方法</span></span><br><span class="line"><span class="built_in">print</span>(response.read())</span><br></pre></td></tr></table></figure><ul><li>timeout</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置超时时间</span><br></pre></td></tr></table></figure></li><li><p>&#x3D;&#x3D;Request()&#x3D;&#x3D;</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">构造请求类</span><br></pre></td></tr></table></figure><ul><li>参数列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urllib.request.Request(url,data=<span class="literal">None</span>,headers=&#123;&#125;,origin_req_host=<span class="literal">None</span>,unverifiable=<span class="literal">False</span>,method=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li>url</li><li>headers</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过修改user-agent来伪装成浏览器</span><br></pre></td></tr></table></figure><ul><li>origin_req_host</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请求方的host名称或者IP</span><br></pre></td></tr></table></figure><ul><li>method</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET or HOST</span><br></pre></td></tr></table></figure></li><li><p>&#x3D;&#x3D;Handler,Opener&#x3D;&#x3D;</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实现验证，代理设置，cookie设置等</span><br></pre></td></tr></table></figure><h4 id="error"><a href="#error" class="headerlink" title="error"></a>error</h4><ul><li>URLError</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">具有一个属性</span><br><span class="line">reason,返回错误原因</span><br></pre></td></tr></table></figure><ul><li>HTTPError</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">URLError的子类，具有三个属性</span><br><span class="line"> code: 返回HTTP的状态码</span><br><span class="line"> reason: 返回错误原因</span><br><span class="line"> headers: 返回请求头</span><br></pre></td></tr></table></figure><h4 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h4><ul><li>urlparse</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实现url识别和分段</span><br></pre></td></tr></table></figure><ul><li>urlunparse</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实现url的构造</span><br></pre></td></tr></table></figure><ul><li>urlencode</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">构造参数，将字典类型转化成GET请求参数</span><br></pre></td></tr></table></figure><ul><li>parse_qs</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">反序列化，将GET请求参数转回字典</span><br></pre></td></tr></table></figure><ul><li>quote</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将中文字符转化成url编码</span><br></pre></td></tr></table></figure><ul><li>unquote</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将url编码后的结果还原</span><br></pre></td></tr></table></figure><h3 id="2-requests"><a href="#2-requests" class="headerlink" title="2. requests"></a>2. requests</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tnnd,有requests还学个der的urllib😒😒😒</span><br></pre></td></tr></table></figure><ul><li><p>get</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.get(url, params=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发送get请求，</span><br></pre></td></tr></table></figure><ul><li>二进制数据抓取</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r=requests.get(url)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;favicon.ico&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(r.content)<span class="comment">#content对应bytes类型二进制数据</span></span><br><span class="line">                      <span class="comment">#text对应字符串类型数据</span></span><br></pre></td></tr></table></figure></li><li><p>post</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.post(url,data=<span class="literal">None</span>,json=<span class="literal">None</span>,**kwargs)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发送POST请求</span><br></pre></td></tr></table></figure><ul><li>文件上传</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">files=&#123;<span class="string">&#x27;file&#x27;</span>: <span class="built_in">open</span>(<span class="string">&#x27;favicon.ico&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">r=requests.post(url,files=files)</span><br></pre></td></tr></table></figure><ul><li>获取cookie</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.cookies)</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> r.cookies.items():<span class="comment">#用items()方法将字典类型转化成可以遍历的元组</span></span><br><span class="line">    <span class="built_in">print</span>(key + <span class="string">&#x27;=&#x27;</span> + value)</span><br></pre></td></tr></table></figure><ul><li>设置cookie</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.get(url,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><ul><li>维持会话</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">模拟在同一浏览器中打开不同的页面</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">s.get(<span class="string">&#x27;http://httpbin.org/cookies/set/number/123456789&#x27;</span>)</span><br><span class="line">r = s.get(<span class="string">&#x27;http://httpbin.org/cookies&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><ul><li>ssl证书验证</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r=requests.get(url,verify=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><ul><li>设置代理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies=&#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;http://host:port&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https&#x27;</span>:<span class="string">&#x27;https://host:port&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">requests.get(url,proxies=proxies)</span><br></pre></td></tr></table></figure><ul><li>超时设置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r=requests.get(url,timeout=num)<span class="comment">#设置超时时间</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r=requests.get(url,timeout=(<span class="number">5</span>,<span class="number">30</span>))<span class="comment">#请求包括connection,read，可分别设置时间</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(r.status_code)<span class="comment">#查看状态码</span></span><br></pre></td></tr></table></figure><ul><li>身份认证</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.get(url,auth=(<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;password&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">貌似得先搞明白认证的方式，这里提供的是HTTP basic auth</span><br></pre></td></tr></table></figure><ul><li>Prepared Request</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> Request, Session</span><br><span class="line"></span><br><span class="line">url = url</span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;name&#x27;</span>&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">s = Session()</span><br><span class="line">req = Request(<span class="string">&#x27;POST&#x27;</span>, url, data=data, headers=headers)</span><br><span class="line">prepped = s.prepare_request(req)</span><br><span class="line">r = s.send(prepped)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用url,data,headers参数构造Request对象,</span><br><span class="line">用Session类的prepare_request方法将其转化成Prepared Request对象，</span><br><span class="line">用send方法发送请求</span><br></pre></td></tr></table></figure><h2 id="解析库"><a href="#解析库" class="headerlink" title="解析库"></a>解析库</h2><h3 id="Xpath"><a href="#Xpath" class="headerlink" title="Xpath"></a>Xpath</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td></tr><tr><td>&#x2F;</td><td>从根节点选取（取子节点）</td></tr><tr><td>&#x2F;&#x2F;</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置（取子孙节点）</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>..</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr></tbody></table><h4 id="应用-lxml库"><a href="#应用-lxml库" class="headerlink" title="应用(lxml库)"></a>应用(lxml库)</h4><ul><li>初始化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     content</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html=etree.HTML(text) <span class="comment">#调用HTML类进行初始化，构造Xpath解析对象</span></span><br><span class="line">result=etree.tostring(html) <span class="comment">#输出修正后的文本，类型是bytes</span></span><br><span class="line"><span class="built_in">print</span>(result.decode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#decode(&#x27;utf-8&#x27;)将bytes类型转化成str</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html=etree.parse(<span class="string">&#x27;./test.html&#x27;</span>,etree.HTMLParse())</span><br><span class="line">result=etree.tostring(html)</span><br><span class="line"><span class="built_in">print</span>(result.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><ul><li>contains,text函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = html.xpath(<span class="string">&#x27;//li[contains(@class, &quot;li&quot;)]/a/text()&#x27;</span>)  </span><br></pre></td></tr></table></figure><ul><li>按序选择</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/a/text()&#x27;</span>) <span class="comment">#第一个</span></span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[last()]/a/text()&#x27;</span>) <span class="comment">#最后一个</span></span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[position()&lt;3]/a/text()&#x27;</span>) <span class="comment">#第一二个</span></span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[last()-2]/a/text()&#x27;</span>)   <span class="comment">#倒数第三个</span></span><br></pre></td></tr></table></figure><p>PS:后面如有用到更多东西会继续补充<br>(xpath yyds🥰🥰🥰,接下来xpath用得应该比较多)</p><h3 id="bs4"><a href="#bs4" class="headerlink" title="bs4"></a>bs4</h3><ul><li>初始化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     content</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup=BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>方法选择器（以find_all为例）</li></ul><ol><li><p>根据节点名查找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.find_all(name=<span class="string">&#x27;ul&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(ul.find_all(name=<span class="string">&#x27;li&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> ul.find_all(name=<span class="string">&#x27;li&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(li.string)</span><br></pre></td></tr></table></figure></li><li><p>通过属性查找</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">soup.find_all(attr=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;element&#x27;</span>&#125;)</span><br><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="string">&#x27;list-1&#x27;</span>)</span><br><span class="line">soup.find_all(class_=<span class="string">&#x27;element&#x27;</span>)<span class="comment">#class是python的关键字，后面需加下划线</span></span><br></pre></td></tr></table></figure></code></pre></li></ol><ul><li>&#x3D;&#x3D;CSS选择器&#x3D;&#x3D;</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">&#x27;css_selectors&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><p>PS:以后再学😖，一定</p>]]></content>
    
    
    <summary type="html">爬虫学习笔记</summary>
    
    
    
    
    <category term="爬虫" scheme="http://xiaoyaoguawang,github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
